[project]
name = "ibleatools"
description = "Tools for IBL data analysis and processing"
authors = [
    {name = "International Brain Laboratory", email = "software-devs@internationalbrainlab.org"},
]
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Intended Audience :: Science/Research",
    "Topic :: Neuroscience :: Data analysis",
    "Programming Language :: Python :: 3.10",
]
dynamic = ["version"]
dependencies = [
    "dartsort @ git+https://github.com/cwindolf/dartsort@iblsorter",
    "dredge @ git+https://github.com/evarol/dredge@v0.2.2",
    "h5py>=3.13.0",
    "hdbscan>=0.8.40",
    "ibllib>=3.3.1",
    "linear-operator>=0.6",
    "mock>=5.2.0",
    "opt-einsum>=3.4.0",
    "pandera>=0.24.0",
    "pydantic>=2.11.4",
    "spikeinterface>=0.101.2",
    "xgboost>=3.0.1",
    "joblib==1.5.1",
    "iblscripts @ git+https://github.com/int-brain-lab/iblscripts.git"
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true

[tool.pdm.version]
source = "file"
path = 'src/ephysatlas/__init__.py'

[tool.pdm.package-dir]
ephysatlas = "src/ephysatlas"

[tool.pdm.packages]
include = ["src/ephysatlas"]

[tool.ruff]
line-length = 88
target-version = "py310"
exclude = [
  ".git",
  ".venv",
  "__pycache__",
  "build",
  "dist",
  ".pdm-build",
  ".vscode",
  "scratch",
  "*.parquet",
  "examples"
]

[tool.ruff.lint]
select = ["E", "F"]  # pycodestyle, Pyflakes, bugbear, pyupgrade
ignore = ["E501"]               # Ignore line-too-long

# Example of per-file ignores
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]     # Ignore unused imports in __init__.py
"tests/*" = ["S101"]          # Ignore assert statements in tests

[dependency-groups]
lint = ["ruff>=0.7.3"]
dev = [
    "pytest>=8.3.5",
]
test = [
    "pytest>=8.3.5",
    "pytest-cov>=4.0.0",  # for coverage reports if needed
]

[tool.coverage.run]
source = ["src/ephysatlas"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "*/.venv/*",
    "*/.env/*",
    "*/build/*",
    "*/dist/*",
    "*/.pytest_cache/*",
    "*/.coverage*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false
precision = 2

[tool.coverage.html]
directory = "htmlcov"
